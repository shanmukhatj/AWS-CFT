AWSTemplateFormatVersion: 2010-09-09
Description: AWS cloudformation template to create ec2 instance with apache,tomcat,jenkins,docker using boot strap script
Parameters:
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  InstanceType:
    Default: 't3.small'
    Type: String

Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: AMI
    t2.nano:
      Arch: AMI
    t2.micro:
      Arch: AMI
    t2.small:
      Arch: AMI
    t2.medium:
      Arch: AMI
    t2.large:
      Arch: AMI
    t3.nano:
      Arch: AMI
    t3.micro:
      Arch: AMI 
    t3.small:
      Arch: AMI   
    t3.medium:
      Arch: AMI
    t3.large:
      Arch: AMI  
    t3.xlarge:
      Arch: AMI  
    t3.2xlarge:
      Arch: AMI    
    m1.small:
      Arch: AMI
    m1.medium:
      Arch: AMI
    m1.large:
      Arch: AMI
    m1.xlarge:
      Arch: AMI
    m2.xlarge:
      Arch: AMI
    m2.2xlarge:
      Arch: AMI
    m2.4xlarge:
      Arch: AMI
    m3.medium:
      Arch: AMI
    m3.large:
      Arch: AMI
    m3.xlarge:
      Arch: AMI
    m3.2xlarge:
      Arch: AMI
    m4.large:
      Arch: AMI
    m4.xlarge:
      Arch: AMI
    m4.2xlarge:
      Arch: AMI
    m4.4xlarge:
      Arch: AMI
    m4.10xlarge:
      Arch: AMI
    c1.medium:
      Arch: AMI
    c1.xlarge:
      Arch: AMI
    c3.large:
      Arch: AMI
    c3.xlarge:
      Arch: AMI
    c3.2xlarge:
      Arch: AMI
    c3.4xlarge:
      Arch: AMI
    c3.8xlarge:
      Arch: AMI
    c4.large:
      Arch: AMI
    c4.xlarge:
      Arch: AMI
    c4.2xlarge:
      Arch: AMI
    c4.4xlarge:
      Arch: AMI
    c4.8xlarge:
      Arch: AMI
    g2.2xlarge:
      Arch: AMI
    g2.8xlarge:
      Arch: AMI
    r3.large:
      Arch: AMI
    r3.xlarge:
      Arch: AMI
    r3.2xlarge:
      Arch: AMI
    r3.4xlarge:
      Arch: AMI
    r3.8xlarge:
      Arch: AMI
    i2.xlarge:
      Arch: AMI
    i2.2xlarge:
      Arch: AMI
    i2.4xlarge:
      Arch: AMI
    i2.8xlarge:
      Arch: AMI
    d2.xlarge:
      Arch: AMI
    d2.2xlarge:
      Arch: AMI
    d2.4xlarge:
      Arch: AMI
    d2.8xlarge:
      Arch: AMI
    hi1.4xlarge:
      Arch: AMI
    hs1.8xlarge:
      Arch: AMI
    cr1.8xlarge:
      Arch: AMI
    cc2.8xlarge:
      Arch: AMI

  AWSRegionArch2AMI:
    us-east-1:
      AMI: ami-0aeeebd8d2ab47354 
    us-east-2:
      AMI: ami-0d8d212151031f51c  
    us-west-1:
      AMI: ami-0b2ca94b5b49e0132 
    us-west-2:
      AMI: ami-0800fc0fa715fdcfe
    af-south-1:
      AMI: ami-0fcccef07c9f9a121
    ap-east-1:
      AMI: ami-0b014b23d42166d9f 
    ap-south-1:
      AMI: ami-0ad704c126371a549
    ap-northeast-3:
      AMI: ami-0a4fb3ab11fbc4969
    ap-northeast-2:
      AMI: ami-02af1a55fd4da5ab1 
    ap-southeast-1:
      AMI: ami-0e8e39877665a7c92 
    ap-southeast-2:
      AMI: ami-0d2fb06f3c1484132
    ap-northeast-1:
      AMI: ami-001f026eaf69770b4
    ca-central-1:
      AMI: ami-07625b74039b1a58b 
    eu-central-1:
      AMI: ami-0bad4a5e987bdebde
    eu-west-1:
      AMI: ami-0ac43988dfd31ab9a 
    eu-west-2:
      AMI: ami-089539692cca55c6c
    eu-south-1:
      AMI: ami-0c2bd6c2ff55b8bf3
    eu-west-3:
      AMI: ami-00c08ad1a6ca8ca7c
    eu-north-1:
      AMI: ami-0e6f4c2b6023d32fb
    me-south-1:
      AMI: ami-0e034554563fb01d5
    sa-east-1:
      AMI: ami-07bfd9965e7b972d1 
             
Resources:
  WebServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: Jenkins-CICD
      IamInstanceProfile: !Ref Ec2SsmInstanceProfile 
      ImageId:
        Fn::FindInMap:
          - AWSRegionArch2AMI
          - Ref: AWS::Region
          - Fn::FindInMap:
              - AWSInstanceType2Arch
              - Ref: InstanceType
              - Arch
      InstanceType: !Ref InstanceType
      UserData:
        Fn::Base64: |
           #!/bin/bash
           cd /tmp
           sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
           sudo systemctl enable amazon-ssm-agent
           sudo systemctl start amazon-ssm-agent
           sudo yum update -y
           sudo yum install git -y 
           sudo yum install -y httpd
           service httpd start
           chkconfig httpd on
           sudo yum update -y 
           sudo yum install java-1.8.0-openjdk -y    #installing java
           sudo yum -y install wget
           wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo--2020-02-18 10:32:55--  https://pkg.jenkins.io/redhat-stable/jenkins.repo
           rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
           yum -y install jenkins
           sudo systemctl start jenkins
           sudo systemctl enable jenkins
           sudo yum update -y 
           sudo amazon-linux-extras install docker
           sudo service docker start
           sudo usermod -a -G docker ec2-user
           sudo chkconfig docker on
           sudo systemctl start docker
           cd /opt 
           wget https://mirrors.estointernet.in/apache/tomcat/tomcat-8/v8.5.68/bin/apache-tomcat-8.5.68.tar.gz
           tar -xvzf  apache-tomcat-8.5.68.tar.gz
           mv apache-tomcat-8.5.68 tomcat
           cd /opt/tomcat/bin
           ./startup.sh
           
           
  Ec2SsmIamRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  Ec2SsmInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles: [!Ref Ec2SsmIamRole]                  
           
           
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
          
Outputs:
  WebServerinstanceid:
    Description: The Instance ID
    Value: !Ref WebServer
  InstanceSecurityGroupid:
    Description: The securitygroup ID
    Value: !Ref InstanceSecurityGroup
  Ec2SsmInstanceProfile:
    Description: ec2 ssm IAM role for ec2 instance
    Value: !Ref Ec2SsmIamRole          